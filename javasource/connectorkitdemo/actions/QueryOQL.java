// This file was generated by Mendix Modeler.
//
// WARNING: Only the following code will be retained when actions are regenerated:
// - the import list
// - the code between BEGIN USER CODE and END USER CODE
// - the code between BEGIN EXTRA CODE and END EXTRA CODE
// Other code you write will be lost the next time you deploy the project.
// Special characters, e.g., é, ö, à, etc. are supported in comments.

package connectorkitdemo.actions;

import com.mendix.core.Core;
import com.mendix.systemwideinterfaces.connectionbus.data.IDataTable;
import com.mendix.systemwideinterfaces.core.IContext;
import com.mendix.webui.CustomJavaAction;
import com.mendix.systemwideinterfaces.core.IMendixObject;
import com.mendix.*;
import java.util.ArrayList;
import java.util.List;

public class QueryOQL extends CustomJavaAction<java.util.List<IMendixObject>>
{
	private java.lang.String DatasetName;
	private java.lang.String ResultEntityName;

	public QueryOQL(IContext context, java.lang.String DatasetName, java.lang.String ResultEntityName)
	{
		super(context);
		this.DatasetName = DatasetName;
		this.ResultEntityName = ResultEntityName;
	}

	@Override
	public java.util.List<IMendixObject> executeAction() throws Exception
	{
		// BEGIN USER CODE
        List<IMendixObject> resultList = new ArrayList<IMendixObject>();
        /**
         * proposal:

         String oqlStatement = Core.getDataSet(DatasetName).getOQL();
         See below
         */
        String oqlQuery = "Select Name as N\n" +
                ",      Price as P\n" +
                ",      Description as D\n" +
                "from ConnectorKitDemoTests.Product";
        IDataTable table = Core.retrieveOQLDataTable(getContext(), oqlQuery);
        int columnCount = table.getSchema().getColumnCount();
        table.forEach( row -> {
            IMendixObject obj = Core.instantiate(getContext(),this.ResultEntityName);
            resultList.add(obj);
            // copy attributes
            for(int i=0; i<columnCount; i++){
                obj.setValue(getContext(), table.getSchema().getColumnSchema(i).getName(),row.getValue(getContext(),i));
            }
        });

        return resultList;
		// END USER CODE
	}

	/**
	 * Returns a string representation of this action
	 */
	@Override
	public java.lang.String toString()
	{
		return "QueryOQL";
	}

	// BEGIN EXTRA CODE
	// END EXTRA CODE
}
